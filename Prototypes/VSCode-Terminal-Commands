Cloning a Repository
git clone <repository-url>: Copies an entire remote repository to your local machine. This sets up a tracking relationship between your local repository and the remote one.

Checking the Status
git status: Displays the state of the working directory and the staging area. It lets you see which changes have been staged, which haven't, and which files aren't being tracked by Git.

Staging Changes
git add <file>: Adds a file to the staging area. It's the first step in incorporating changes in the working directory into your repository.
git add .: Adds all changes in the working directory to the staging area, including new files and changes to existing ones.

Committing Changes
git commit -m "commit message": Takes whatever is in the staging area and commits it to the project's history. The -m flag allows you to add a commit message in-line.

Pulling Changes
git pull: Fetches changes from the remote repository and merges them into your current branch. This command is a combination of git fetch followed by git merge.

Pushing Changes
git push: Uploads your commits to the remote repository. If you're pushing a new branch or tags, you might need to use git push --set-upstream origin <branch-name> the first time.

Branch Management
git branch: Lists all local branches in your repository. With -a, it shows all branches (local and remote).
git branch <branch-name>: Creates a new branch.
git checkout <branch-name>: Switches to the specified branch and updates the working directory.
git merge <branch>: Merges the specified branchâ€™s history into the current branch. This is usually done from the receiving branch.
git branch -d <branch-name>: Deletes the specified branch.
